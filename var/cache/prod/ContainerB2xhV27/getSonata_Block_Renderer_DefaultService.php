<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'sonata.block.renderer.default' shared service.

include_once $this->targetDirs[3].'/vendor/sonata-project/block-bundle/src/Exception/Strategy/StrategyManagerInterface.php';
include_once $this->targetDirs[3].'/vendor/sonata-project/block-bundle/src/Exception/Strategy/StrategyManager.php';
include_once $this->targetDirs[3].'/vendor/sonata-project/block-bundle/src/Block/BlockRendererInterface.php';
include_once $this->targetDirs[3].'/vendor/sonata-project/block-bundle/src/Block/BlockRenderer.php';

$a = new \Sonata\BlockBundle\Exception\Strategy\StrategyManager($this, array('debug_only' => 'sonata.block.exception.filter.debug_only', 'ignore_block_exception' => 'sonata.block.exception.filter.ignore_block_exception', 'keep_all' => 'sonata.block.exception.filter.keep_all', 'keep_none' => 'sonata.block.exception.filter.keep_none'), array('inline' => 'sonata.block.exception.renderer.inline', 'inline_debug' => 'sonata.block.exception.renderer.inline_debug', 'throw' => 'sonata.block.exception.renderer.throw'), array(), array());
$a->setDefaultFilter('debug_only');
$a->setDefaultRenderer('throw');

return $this->services['sonata.block.renderer.default'] = new \Sonata\BlockBundle\Block\BlockRenderer(($this->services['sonata.block.manager'] ?? $this->load('getSonata_Block_ManagerService.php')), $a, ($this->privates['monolog.logger'] ?? $this->load('getMonolog_LoggerService.php')), true);
